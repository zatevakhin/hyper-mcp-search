name: Release

on:
  push:
    tags:
      - 'v*'  # Match tags like v1.0.0 etc.

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  build-oci-images:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: amd64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
      id-token: write # needed for keyless signing

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # tag images with both git tag & latest
      - name: Build and push plugin images
        if: matrix.arch == 'amd64'
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          plugin_name=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          plugin_base_image="${{ env.REGISTRY }}/${{ github.repository_owner }}/${plugin_name}-plugin"

          echo "Building and tagging plugin: $plugin_name as $plugin_base_image:$TAG and $plugin_base_image:latest"
          docker build -t $plugin_base_image:$TAG -t $plugin_base_image:latest .

          docker push $plugin_base_image:$TAG
          docker push $plugin_base_image:latest

          cosign sign --yes $plugin_base_image:$TAG
          cosign sign --yes $plugin_base_image:latest

